#!/usr/bin/env python
# -*- coding: utf-8 -*-
#
import argparse
import os

import excode


def _main():
    parser = _parse_cmd_arguments()
    args = parser.parse_args()
    if _validate_args(args):
        if os.path.isdir(args.indir):
            for _root, _dirs, files in os.walk(args.indir):
                for a_file in files:
                    if a_file.endswith(".md"):
                        _run_excode(
                            args.indir, os.path.join(_root, a_file), args.outdir
                        )
        else:
            _run_excode(os.path.dirname(args.indir), args.indir, args.outdir)
    else:
        parser.print_help()
    return


def _run_excode(rootdir, indir, outdir):
    extracted = excode.extract(indir)
    excode.write(rootdir, outdir, extracted)


def _parse_cmd_arguments():
    parser = argparse.ArgumentParser(
        description="Extract code blocks from markdown file(s)"
    )
    parser.add_argument(
        "indir", type=str, help="input markdown file or directory",
    )
    parser.add_argument("outdir", type=str, help="output dir")
    return parser


def _validate_args(args):
    if not os.path.isdir(args.indir) and not os.path.isfile(args.indir):
        print(f"{args.indir} must be an existing directory or file path")
        return False

    if not os.path.isdir(args.outdir):
        os.makedirs(args.outdir, exist_ok=True)

    return True


if __name__ == "__main__":
    _main()
